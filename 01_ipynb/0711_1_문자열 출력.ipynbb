{"cells":[{"cell_type":"markdown","metadata":{"id":"tNSXvsxuG4j2"},"source":["# 문자열 메소드\n","## 문자열 (str) 에 자주 사용하는 메소드들이 있습니다.\n","\n","- 문자들의 순서 있는 집합\n","- 여러줄로 이뤄진 문자열 표현도 가능 - 단일, 쌍따옴표 표현\n","- print 함수 사용시 특수 기호로 처리 가능 : \\r(문자열 앞단에 선언)\n","- str() : 문자열로 형변환\n","- 문자열 반복\n","- 문자열 출력\n","- 문자열 indexing\n","- 문자열 slice : 문자열의 일부 추출\n","- 문자열의 내장 함수 이해하기\n","- 유니코드 문자열 : 전 세계 언어의 문자를 정의하기 위한 국제 표준 코드\n","- python3 부턴 모든 문자열을 유니코드로 처리\n","- 파이썬에서 제공하는 문자열과 관련된 기능들은 진짜 많습니다.\n","- [파이썬 공식 문자열 레퍼런스](https://docs.python.org/ko/3/library/stdtypes.html#text-sequence-type-str)\n","- 자주 사용되는 문자열 메소드\n","\n","  - split()\n","  - replace()\n","  - strip()\n","  - join()\n","  - format()\n","  \n"]},{"cell_type":"markdown","metadata":{"id":"CxJ19nIPJPvf"},"source":["### split\n","- 문자열.split(t,n)\n","- 문자열에서 t 기준으로 n만큼 분리한 문자열 리스트를 반환해주세요\n"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"gUlpG3FjLHPA"},"outputs":[],"source":["str1 = '안녕/안녕/안녕하세요/반가워요/좋은아침입니다'"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"QEGGM60wJJo2"},"outputs":[{"data":{"text/plain":["['안녕/안녕/안녕하세요/반가워요/좋은아침입니다']"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["str1.split()"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"xNAavNljJhju"},"outputs":[{"data":{"text/plain":["['안녕', '안녕', '안녕하세요', '반가워요', '좋은아침입니다']"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["str1.split('/')"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"2BBDQjra3VhI"},"outputs":[{"name":"stdout","output_type":"stream","text":["['안녕', '안녕', '안녕하세요', '반가워요', '좋은아침입니다']\n","['안녕/안녕/안녕하세요/반가워요/좋은아침입니다']\n","['안녕', '안녕/안녕하세요/반가워요/좋은아침입니다']\n","['안녕', '안녕', '안녕하세요/반가워요/좋은아침입니다']\n"]}],"source":["print(str1.split('/', -1))\n","print(str1.split('/', 0))\n","print(str1.split('/', 1))\n","print(str1.split('/', 2))"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"D_s2-xtbJoiN"},"outputs":[{"data":{"text/plain":["['안녕', '안녕', '안녕하세요', '반가워요', '좋은아침입니다']"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["str1.split(sep='/', maxsplit=-1)"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"Fwti7PW332fA"},"outputs":[{"data":{"text/plain":["['안녕', '안녕', '안녕하세요', '반가워요', '좋은아침입니다']"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["str1.split(maxsplit=-1, sep='/')"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"VaPPr0sWJz09"},"outputs":[{"name":"stdout","output_type":"stream","text":["안녕\n","안녕\n","안녕하세요\n","반가워요\n","좋은아침입니다\n"]}],"source":["for _ in str1.split('/'):\n","    print(_)"]},{"cell_type":"code","execution_count":27,"metadata":{},"outputs":[{"data":{"text/plain":["['안녕', '안녕', '안녕하세요', '반가워요', '좋은아침입니다']"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["str1.rsplit('/')"]},{"cell_type":"code","execution_count":28,"metadata":{},"outputs":[{"data":{"text/plain":["['안녕/안녕/안녕하세요', '반가워요', '좋은아침입니다']"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["str1.rsplit('/', 2)"]},{"cell_type":"markdown","metadata":{"id":"sZvWdSDzLJuO"},"source":["```\n","['사과', '귤', '오렌지', '포도']\n","['사과', '귤*오렌지*포도']\n","['사과', '귤', '오렌지*포도']\n","```\n"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"KIs8tPrzKkQV"},"outputs":[{"data":{"text/plain":["['귤', '오렌지', '포도']"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["sample1 ='귤*오렌지*포도'\n","\n","sample1.split('*')"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"iIkCRo_-LUHw"},"outputs":[{"data":{"text/plain":["['사과', '귤', '오렌지', '포도']"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["li0 = ['사과', '귤*오렌지*포도']\n","\n","[li0[0], *li0[1].split('*')]"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"IleBaa3dLiFE"},"outputs":[{"ename":"SyntaxError","evalue":"invalid syntax. Perhaps you forgot a comma? (2534136381.py, line 3)","output_type":"error","traceback":["\u001b[1;36m  Cell \u001b[1;32mIn[17], line 3\u001b[1;36m\u001b[0m\n\u001b[1;33m    [li0[0], ...li0[1].split('*')]\u001b[0m\n\u001b[1;37m             ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax. Perhaps you forgot a comma?\n"]}],"source":["li0 = ['사과', '귤*오렌지*포도']\n","\n","[li0[0], ...li0[1].split('*')]"]},{"cell_type":"markdown","metadata":{"id":"kOfYfb1kMpN-"},"source":["## replace\n","- 문자열 치환\n","  - 조건에 맞는 문자열을 치환\n","  - 메모장에서 바꾸기 기능과 같은 기능 입니다.\n","\n","```\n","str.replace(old, new[, count])\n","```"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"u-osynU5MlOt"},"outputs":[],"source":["str1 = '안녕 나는 짱구 아빠야'"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"ZhSDaZHUM0AW"},"outputs":[{"data":{"text/plain":["'안녕 나는 훈이 아빠야'"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["str1.replace('짱구', '훈이')"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"hvStmAUzNIU0"},"outputs":[],"source":["str1 = '안녕 나는 짱구 짱아 짱짱맨 짱 아빠야'"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"bXd3F_KANMYF"},"outputs":[{"data":{"text/plain":["'안녕 나는 훈구 훈아 짱짱맨 짱 아빠야'"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["str1.replace('짱', '훈', 2)"]},{"cell_type":"markdown","metadata":{"id":"36af_rQ1NZns"},"source":["## strip\n","- 문자열의 앞, 뒤에 존재하는 화이트 스페이스를 전부 제거\n","  - 문자열의 마지막에 뉴라인의 존재 여부\n","  - 불필요한 문자들은 전부 제거 할 수 있다.\n","  - 문자열 중간에 있는 화이트 스페이스는 제거되지 않습니다\n","\n","- 메소드의 원형\n","```\n","str.strip([chars])\n","```"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"0ZXB7YtLNRXW"},"outputs":[],"source":["st2 = '           hello          '"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"daKprYbnNsst"},"outputs":[{"data":{"text/plain":["'hello          '"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["st2.lstrip()"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"H-6oofzANvqO"},"outputs":[{"data":{"text/plain":["'           hello'"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["st2.rstrip()"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"FMxOpEDhN3GW"},"outputs":[{"data":{"text/plain":["'hello'"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["st2.strip()"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"VWnnUgxdN_9d"},"outputs":[],"source":["actors = '로미오&줄리엣1010'\n","actors1 = '로미오1010&줄리엣'\n","actors2 = '1010로미오&줄리엣1010'"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"LCqMP_HcOJM2"},"outputs":[{"data":{"text/plain":["'로미오&줄리엣'"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["actors.strip('1010')"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"yX28UYTeOxjX"},"outputs":[{"data":{"text/plain":["'로미오1010&줄리엣'"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["actors1.strip('1010')"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"SXMSw0dVHqzx"},"outputs":[{"data":{"text/plain":["'1010로미오&줄리엣'"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["actors2.rstrip('1010')"]},{"cell_type":"markdown","metadata":{},"source":["### 위에서 설명한 메소드들을 활용하여 actors1 문자열의 1010을 없애주세요\n"]},{"cell_type":"code","execution_count":36,"metadata":{},"outputs":[{"data":{"text/plain":["'로미오&줄리엣'"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["actors1.split('1010')[0] + actors1.split('1010')[1]"]},{"cell_type":"code","execution_count":37,"metadata":{},"outputs":[{"data":{"text/plain":["'로미오&줄리엣'"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["actors1.replace('1010', '')"]},{"cell_type":"markdown","metadata":{"id":"IQwfi_zkNfHk"},"source":["# join\n","- 여러개 문자열을 하나의 문자열로 합쳐서 새 문자열을 돌려줍니다\n","    - 여러개 문자열이 이터러블 객체여야 합니다.\n","\n","```\n","    str.join(iterable)\n","```"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"thrmXrWZM8tl"},"outputs":[],"source":["a = ['짱구', '짱아', '장구엄마', '짱구아빠']"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"ZzP3Ih0SHABl"},"outputs":[],"source":["b = ('짱구', '짱아', '장구엄마', '짱구아빠')"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"lAquNVvNHex-"},"outputs":[{"data":{"text/plain":["'짱구짱아장구엄마짱구아빠'"]},"execution_count":41,"metadata":{},"output_type":"execute_result"}],"source":["''.join(a)"]},{"cell_type":"code","execution_count":44,"metadata":{"id":"kwjLYtr_HlYU"},"outputs":[{"data":{"text/plain":["'짱구짱아장구엄마짱구아빠'"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["''.join(b)"]},{"cell_type":"code","execution_count":45,"metadata":{},"outputs":[{"data":{"text/plain":["'짱구🍳짱아🍳장구엄마🍳짱구아빠'"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["'🍳'.join(a)"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"JnKE3WDd8SCj"},"outputs":[],"source":["dict1 = {'a': 1234, 'b':356}"]},{"cell_type":"code","execution_count":48,"metadata":{"id":"G1Rs8j4o8gFT"},"outputs":[{"data":{"text/plain":["'ab'"]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["''.join(dict1)"]},{"cell_type":"code","execution_count":49,"metadata":{},"outputs":[{"data":{"text/plain":["'ab'"]},"execution_count":49,"metadata":{},"output_type":"execute_result"}],"source":["''.join(dict1.keys())"]},{"cell_type":"code","execution_count":53,"metadata":{},"outputs":[{"data":{"text/plain":["'dict_values([1234, 356])'"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["''.join(str(dict1.values()))"]},{"cell_type":"code","execution_count":58,"metadata":{},"outputs":[{"data":{"text/plain":["'1234356'"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["''.join(list(dict1.values()))"]},{"cell_type":"code","execution_count":54,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1720655444413,"user":{"displayName":"YeonJi Kim","userId":"14148434577200812637"},"user_tz":-540},"id":"2MrIU6VU8mIu"},"outputs":[],"source":["dict1 = {'a': '1234', 'b':'356'}"]},{"cell_type":"code","execution_count":55,"metadata":{"executionInfo":{"elapsed":370,"status":"ok","timestamp":1720655449110,"user":{"displayName":"YeonJi Kim","userId":"14148434577200812637"},"user_tz":-540},"id":"aTO6_1Ew8pTG"},"outputs":[{"data":{"text/plain":["'1234356'"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["''.join(dict1.values())"]},{"cell_type":"code","execution_count":57,"metadata":{},"outputs":[{"data":{"text/plain":["\"dict_items([('a', '1234'), ('b', '356')])\""]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["''.join(str(dict1.items()))"]},{"cell_type":"markdown","metadata":{"id":"vBudtunR3kBP"},"source":["아래의 가사는 퍼렐 윌리엄스의 'happy'가사 입니다. 소괄호()는 공백이 없이 ''(작은따옴표 두개 - 빈 문자열)로, 엔터를 의미하는 이스케이핑 문자열이 있는 부분의 문자열은 한 칸 공백으로 변경해 string이라는 변수명에 저장해주세요. (반복문 없이)\n","```\n","It might seem crazy what I am 'bout to say\n","Sunshine she's here, you can take a break\n","I'm a hot air balloon that could go to space\n","With the air, like I don't care, baby by the way\n","Huh (Because I'm happy)\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Here come bad news talking this and that (Yeah)\n","Well give me all you got, don't hold back (Yeah)\n","Well I should probably warn you I'll be just fine (Yeah)\n","No offence to you don't waste your time\n","Here's why\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down\n","Can't nothing, bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Bring me down, can't nothing\n","Bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, my level's too high\n","To bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (ayy, ayy, ayy)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (hey)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Come on\n"]},{"cell_type":"code","execution_count":68,"metadata":{"id":"Lrxf9VKQ92FY"},"outputs":[],"source":["happy = input()"]},{"cell_type":"code","execution_count":67,"metadata":{"id":"nDQ7ui3pFdEN"},"outputs":[{"data":{"text/plain":["35"]},"execution_count":67,"metadata":{},"output_type":"execute_result"}],"source":["happy.lower().count('happy')"]},{"cell_type":"code","execution_count":103,"metadata":{"id":"rom8_xHnF4jF"},"outputs":[],"source":["happy2 = ''' It might seem crazy what I am 'bout to say\n","Sunshine she's here, you can take a break\n","I'm a hot air balloon that could go to space\n","With the air, like I don't care, baby by the way\n","Huh (Because I'm happy)\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Here come bad news talking this and that (Yeah)\n","Well give me all you got, don't hold back (Yeah)\n","Well I should probably warn you I'll be just fine (Yeah)\n","No offence to you don't waste your time\n","Here's why\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down\n","Can't nothing, bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Bring me down, can't nothing\n","Bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, my level's too high\n","To bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (ayy, ayy, ayy)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (hey)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Come on '''"]},{"cell_type":"code","execution_count":92,"metadata":{"id":"nM5bNVS-GitM"},"outputs":[{"data":{"text/plain":["35"]},"execution_count":92,"metadata":{},"output_type":"execute_result"}],"source":["happy2\\\n","    .lower()\\\n","    .replace('\\n', ' ')\\\n","    .replace(\"'s\", ' is')\\\n","    .replace(\"don't\", 'do not')\\\n","    .replace(\"can't\", 'cannot')\\\n","    .replace(\"'ll\", ' will')\\\n","    .replace(\"'bout\", 'about')\\\n","    .replace(\"'m\", ' am')\\\n","    .replace('(', '')\\\n","    .replace(')', '')\\\n","    .replace('.', '')\\\n","    .replace(',', '')\\\n","    .count('happy')"]},{"cell_type":"code","execution_count":113,"metadata":{"id":"56jP1WVBG9ik"},"outputs":[{"data":{"text/plain":["' it might seem crazy what i am about to say sunshine she is here you can take a break i am a hot air balloon that could go to space with the air like i do not care baby by the way huh because i am happy clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you because i am happy clap along if you feel like that is what you wanna do here come bad news talking this and that yeah well give me all you got do not hold back yeah well i should probably warn you i will be just fine yeah no offence to you do not waste your time here is why clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you because i am happy clap along if you feel like that is what you wanna do uh bring me down cannot nothing bring me down my level is too high to bring me down cannot nothing bring me down i said bring me down cannot nothing bring me down my level is too high to bring me down cannot nothing bring me down i said clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you because i am happy clap along if you feel like that is what you wanna do clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you because i am happy clap along if you feel like that is what you wanna do uh bring me down happy happy happy happy cannot nothing happy happy happy happy bring me down my level is too high to bring me down happy happy happy happy cannot nothing happy happy happy happy bring me down i said clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you ayy ayy ayy  because i am happy clap along if you feel like that is what you wanna do clap along if you feel like a room without a roof because i am happy clap along if you feel like happiness is the truth because i am happy clap along if you know what happiness is to you hey  because i am happy clap along if you feel like that is what you wanna do come on '"]},"execution_count":113,"metadata":{},"output_type":"execute_result"}],"source":["happy3 = happy2\\\n","    .lower()\\\n","    .replace('\\n', ' ')\\\n","    .replace(\"'s\", ' is')\\\n","    .replace(\"don't\", 'do not')\\\n","    .replace(\"can't\", 'cannot')\\\n","    .replace(\"'ll\", ' will')\\\n","    .replace(\"'bout\", 'about')\\\n","    .replace(\"'m\", ' am')\\\n","    .replace('(', ' ')\\\n","    .replace(')', ' ')\\\n","    .replace('.', '')\\\n","    .replace(',', '')\\\n","    .replace('\"', '')\\\n","    .replace('  ', ' ')\n","    \n","happy3"]},{"cell_type":"code","execution_count":136,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["[('you', 40), ('happy', 35), ('i', 27), ('if', 24), ('clap', 24), ('along', 24), ('is', 23), ('am', 21), ('like', 19), ('because', 19), ('feel', 18), ('a', 14), ('me', 13), ('what', 13), ('happiness', 12), ('down', 12), ('to', 12), ('bring', 12), ('do', 9), ('the', 8), ('that', 8), ('truth', 6), ('cannot', 6), ('without', 6), ('roof', 6), ('wanna', 6), ('nothing', 6), ('know', 6), ('room', 6), ('', 4), ('not', 3), ('here', 3), ('my', 3), ('too', 3), ('yeah', 3), ('ayy', 3), ('level', 3), ('high', 3), ('said', 3), ('uh', 2), ('well', 2), ('air', 2), ('come', 2), ('offence', 1), ('hold', 1), ('why', 1), ('on', 1), ('talking', 1), ('seem', 1), ('by', 1), ('it', 1), ('hot', 1), ('fine', 1), ('sunshine', 1), ('she', 1), ('time', 1), ('probably', 1), ('got', 1), ('about', 1), ('balloon', 1), ('your', 1), ('will', 1), ('no', 1), ('can', 1), ('news', 1), ('care', 1), ('might', 1), ('all', 1), ('break', 1), ('huh', 1), ('back', 1), ('could', 1), ('space', 1), ('hey', 1), ('and', 1), ('waste', 1), ('baby', 1), ('warn', 1), ('take', 1), ('should', 1), ('crazy', 1), ('with', 1), ('just', 1), ('give', 1), ('this', 1), ('go', 1), ('be', 1), ('say', 1), ('bad', 1), ('way', 1)]\n"]}],"source":["happy_list = happy3.split(' ')\n","happy_set = set(happy_list)\n","happy_dict = {}\n","\n","for word in happy_set:\n","    count = happy_list.count(word)\n","    happy_dict[word] = count\n","    \n","happy_dict_items = happy_dict.items()\n","sorted_list = sorted(list(happy_dict_items), key=lambda x: x[1], reverse=True)\n","\n","print(sorted_list)"]},{"cell_type":"code","execution_count":144,"metadata":{"id":"SxaqSj2dG0h9"},"outputs":[{"name":"stdout","output_type":"stream","text":["[('you', 40), ('happy', 35), ('i', 27), ('if', 24), ('clap', 24), ('along', 24), ('is', 23), ('am', 21), ('like', 19), ('because', 19), ('feel', 18), ('a', 14), ('me', 13), ('what', 13), ('happiness', 12), ('down', 12), ('to', 12), ('bring', 12), ('do', 9), ('the', 8), ('that', 8), ('truth', 6), ('cannot', 6), ('without', 6), ('roof', 6), ('wanna', 6), ('nothing', 6), ('know', 6), ('room', 6), ('', 4), ('not', 3), ('here', 3), ('my', 3), ('too', 3), ('yeah', 3), ('ayy', 3), ('level', 3), ('high', 3), ('said', 3), ('uh', 2), ('well', 2), ('air', 2), ('come', 2), ('offence', 1), ('hold', 1), ('why', 1), ('on', 1), ('talking', 1), ('seem', 1), ('by', 1), ('it', 1), ('hot', 1), ('fine', 1), ('sunshine', 1), ('she', 1), ('time', 1), ('probably', 1), ('got', 1), ('about', 1), ('balloon', 1), ('your', 1), ('will', 1), ('no', 1), ('can', 1), ('news', 1), ('care', 1), ('might', 1), ('all', 1), ('break', 1), ('huh', 1), ('back', 1), ('could', 1), ('space', 1), ('hey', 1), ('and', 1), ('waste', 1), ('baby', 1), ('warn', 1), ('take', 1), ('should', 1), ('crazy', 1), ('with', 1), ('just', 1), ('give', 1), ('this', 1), ('go', 1), ('be', 1), ('say', 1), ('bad', 1), ('way', 1)]\n"]}],"source":["happy_list = happy3.split(' ')\n","happy_set = set(happy_list)\n","happy_dict = {}\n","\n","for word in happy_set:\n","    count = happy_list.count(word)\n","    happy_dict[word] = count\n","  \n","sorted_list = sorted(happy_dict.items(), key=lambda x: x[1], reverse=True)\n","\n","print(sorted_list)"]},{"cell_type":"code","execution_count":152,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["[(40, 'you'), (35, 'happy'), (27, 'i'), (24, 'if'), (24, 'clap'), (24, 'along'), (23, 'is'), (21, 'am'), (19, 'like'), (19, 'because'), (18, 'feel'), (14, 'a'), (13, 'what'), (13, 'me'), (12, 'to'), (12, 'happiness'), (12, 'down'), (12, 'bring'), (9, 'do'), (8, 'the'), (8, 'that'), (6, 'without'), (6, 'wanna'), (6, 'truth'), (6, 'room'), (6, 'roof'), (6, 'nothing'), (6, 'know'), (6, 'cannot'), (4, ''), (3, 'yeah'), (3, 'too'), (3, 'said'), (3, 'not'), (3, 'my'), (3, 'level'), (3, 'high'), (3, 'here'), (3, 'ayy'), (2, 'well'), (2, 'uh'), (2, 'come'), (2, 'air'), (1, 'your'), (1, 'with'), (1, 'will'), (1, 'why'), (1, 'way'), (1, 'waste'), (1, 'warn'), (1, 'time'), (1, 'this'), (1, 'talking'), (1, 'take'), (1, 'sunshine'), (1, 'space'), (1, 'should'), (1, 'she'), (1, 'seem'), (1, 'say'), (1, 'probably'), (1, 'on'), (1, 'offence'), (1, 'no'), (1, 'news'), (1, 'might'), (1, 'just'), (1, 'it'), (1, 'huh'), (1, 'hot'), (1, 'hold'), (1, 'hey'), (1, 'got'), (1, 'go'), (1, 'give'), (1, 'fine'), (1, 'crazy'), (1, 'could'), (1, 'care'), (1, 'can'), (1, 'by'), (1, 'break'), (1, 'be'), (1, 'balloon'), (1, 'bad'), (1, 'back'), (1, 'baby'), (1, 'and'), (1, 'all'), (1, 'about')]\n"]}],"source":["happy_list = happy3.split(' ')\n","happy_set = set(happy_list)\n","happy_dict = {}\n","\n","for word in happy_set:\n","    count = happy_list.count(word)\n","    happy_dict[word] = count\n","\n","reversed_happy = [] \n","for rank in happy_dict.items():\n","    reversed_happy.append((rank[1], rank[0]))\n","\n","reversed_happy.sort(reverse=True)\n","\n","print(reversed_happy)"]},{"cell_type":"markdown","metadata":{"id":"05C6nPKqJQt3"},"source":["- 파이썬에는 collections이라는 별도의 모듈이 존재합니다.\n","- 딕셔너리를 좀더 잘 활용하게 만들어주는 모듈이라고 생각하시면 됩니다."]},{"cell_type":"code","execution_count":151,"metadata":{"id":"Uiyyaja7JNaA"},"outputs":[{"name":"stdout","output_type":"stream","text":["Counter({'you': 40, 'happy': 35, 'i': 27, 'clap': 24, 'along': 24, 'if': 24, 'is': 23, 'am': 21, 'like': 19, 'because': 19, 'feel': 18, 'a': 14, 'what': 13, 'me': 13, 'to': 12, 'happiness': 12, 'bring': 12, 'down': 12, 'do': 9, 'that': 8, 'the': 8, 'room': 6, 'without': 6, 'roof': 6, 'truth': 6, 'know': 6, 'wanna': 6, 'cannot': 6, 'nothing': 6, '': 4, 'here': 3, 'not': 3, 'yeah': 3, 'my': 3, 'level': 3, 'too': 3, 'high': 3, 'said': 3, 'ayy': 3, 'air': 2, 'come': 2, 'well': 2, 'uh': 2, 'it': 1, 'might': 1, 'seem': 1, 'crazy': 1, 'about': 1, 'say': 1, 'sunshine': 1, 'she': 1, 'can': 1, 'take': 1, 'break': 1, 'hot': 1, 'balloon': 1, 'could': 1, 'go': 1, 'space': 1, 'with': 1, 'care': 1, 'baby': 1, 'by': 1, 'way': 1, 'huh': 1, 'bad': 1, 'news': 1, 'talking': 1, 'this': 1, 'and': 1, 'give': 1, 'all': 1, 'got': 1, 'hold': 1, 'back': 1, 'should': 1, 'probably': 1, 'warn': 1, 'will': 1, 'be': 1, 'just': 1, 'fine': 1, 'no': 1, 'offence': 1, 'waste': 1, 'your': 1, 'time': 1, 'why': 1, 'hey': 1, 'on': 1})\n"]}],"source":["import collections\n","\n","collect_counter = collections.Counter(happy_list)\n","\n","print(collect_counter)"]},{"cell_type":"markdown","metadata":{"id":"fAKKROkqQDWx"},"source":["우리가 지금 사용하는 문자열 관련 함수들은 문자열이 iterable 객체라는 것을 활용하고 있는 겁니다."]},{"cell_type":"code","execution_count":153,"metadata":{"id":"tHGVxUacL667"},"outputs":[{"data":{"text/plain":["2485"]},"execution_count":153,"metadata":{},"output_type":"execute_result"}],"source":["len(happy2)"]},{"cell_type":"markdown","metadata":{"id":"e_dM-XkBSWfk"},"source":["# find\n","\n","```\n","str.find('찾을 문자', 시작인덱스, 끝인덱스)\n","```\n","- 문자열에 포함된 첫번째 요소의 index 값 반환\n","- 찾고자 하는 특정 문자열이 여러 개인 경우에는 최초 발견한 원소의 시작위치만 알려준다. (여러개 찾을 때는 re 모듈의 finditer 활용)"]},{"cell_type":"code","execution_count":155,"metadata":{"id":"DkmYtRdNSOgB"},"outputs":[],"source":["str1 = 'IT AI AI Engineering Engineer deer'"]},{"cell_type":"code","execution_count":159,"metadata":{"id":"pC6SRuSJShZz"},"outputs":[{"data":{"text/plain":["3"]},"execution_count":159,"metadata":{},"output_type":"execute_result"}],"source":["str1.find('AI')"]},{"cell_type":"markdown","metadata":{"id":"2AuGPlfZXIY4"},"source":["# 정규식(Regular Expression)\n","```\n"," \"특정 조건 또는 패턴\"을 치환하는 과정을 쉽게 처리할 수 있는 방법\n","```\n","\n","- match() : 문자열의 첫 시작부터 정규식과 매치되는지 조사한다.\n","- search() :\t문자열 전체를 검색하여 정규식과 매치되는지 조사한다.\n","- findall()\t: 정규식과 매치되는 모든 문자열(substring)을 리스트로 돌려준다.\n","- finditer() : 정규식과 매치되는 모든 문자열(substring)을 반복 가능한 객체로 돌려준다.\n","https://docs.python.org/ko/3/library/re.html?highlight=re#module-re"]},{"cell_type":"markdown","metadata":{"id":"eT4FSJ9kuj_C"},"source":["re 패키지를 사용하는 법은 2가지가 있습니다\n","```\n","p = re.complie('패턴')\n","p.method(데이터)\n","```"]},{"cell_type":"code","execution_count":170,"metadata":{"id":"MTAFOYCjuxY4"},"outputs":[{"data":{"text/plain":["[<callable_iterator at 0x1f20e939150>]"]},"execution_count":170,"metadata":{},"output_type":"execute_result"}],"source":["import re\n","\n","patt = re.compile('AI')"]},{"cell_type":"code","execution_count":172,"metadata":{"id":"jCWzht34g9I3"},"outputs":[],"source":["patt.match(str1)"]},{"cell_type":"code","execution_count":180,"metadata":{"id":"21TfZLishZ2P"},"outputs":[{"data":{"text/plain":["['AI', 'AI']"]},"execution_count":180,"metadata":{},"output_type":"execute_result"}],"source":["patt.findall(str1)"]},{"cell_type":"code","execution_count":179,"metadata":{"id":"KBRP3ET2hFNU"},"outputs":[{"data":{"text/plain":["<re.Match object; span=(3, 5), match='AI'>"]},"execution_count":179,"metadata":{},"output_type":"execute_result"}],"source":["patt.search(str1)"]},{"cell_type":"code","execution_count":178,"metadata":{"id":"M5Yt_QnYhz8s"},"outputs":[],"source":["patt2 = re.compile()\n","\n","patt2.search(str1)"]},{"cell_type":"markdown","metadata":{"id":"40asXt_6kUrU"},"source":["### [문자 클래스]\n","\n","1. [abc] - a, b, c중 한 개의 문자와 매치\n","  - a : 매치여부 OK\n","  - apple : ok\n","  - double : no\n","\n","2. \\d   : 숫자와 매치, [0-9]와 동일\n","\n","3. \\D : 숫자가 아닌 것과 매치 [^0-9]와 동일\n","\n","4. \\s : whitespace 문자와 매치\n","\n","5. \\S : whitespace 문자가 아닌것과 매치,\n","\n","6. \\w : 문자 + 숫자와 매치, [a-zA-Z0-9]와 동일\n","\n","7. \\W : 문자+숫자가 아닌 문자와 매치. [^a-zA-Z0-9]와 동일\n","  \n","\n","\n","8. a.b : a와 b 사이에 줄바꿈 문자를 제외한 모든 문자 허용\n","\n","9. a[.]b : a와 b 사이에 dot 문자만 허용\n","\n","10. ca*t  : a 문자가 0번 이상 반복 허용\n","\n","11. ca+t :  a 문자가 1번 이상 반복 허용\n","\n","12. ca?t : a 문자가 없거나, 1번만 허용\n","\n","13. ca{3}t : a 문자가 3번 반복되면 매치\n","\n","14. ca{2, 3}t : a 문자가 2~3번 반복되면 매치"]},{"cell_type":"markdown","metadata":{"id":"uM26Z-7vUhPq"},"source":["\n","    str1 = 'abIT aIT IT it AI AI Engineering Engineer deer 한글 010-1234-5678 😊❤ aa👌 '\n","    "]},{"cell_type":"code","execution_count":181,"metadata":{"id":"iDv93MU0k3oD"},"outputs":[],"source":["str1 = 'abIT aIT IT it AI AI Engineering Engineer deer 한글 010-1234-5678 😊❤ aa👌 '"]},{"cell_type":"code","execution_count":189,"metadata":{"id":"-jFqO4u9qATx"},"outputs":[],"source":["pat3 = re.compile('[a-zA-Z]+')"]},{"cell_type":"code","execution_count":190,"metadata":{"id":"Tffh-otJnwGw"},"outputs":[{"name":"stdout","output_type":"stream","text":["['abIT', 'aIT', 'IT', 'it', 'AI', 'AI', 'Engineering', 'Engineer', 'deer', 'aa']\n"]}],"source":["print(pat3.findall(str1))"]},{"cell_type":"code","execution_count":191,"metadata":{"id":"_GA5fNTZnqJo"},"outputs":[],"source":["pat3 = re.compile('[a-zA-Z]*')"]},{"cell_type":"code","execution_count":193,"metadata":{"id":"0je_y7iZrgfu"},"outputs":[{"name":"stdout","output_type":"stream","text":["['abIT', '', 'aIT', '', 'IT', '', 'it', '', 'AI', '', 'AI', '', 'Engineering', '', 'Engineer', '', 'deer', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'aa', '', '', '']\n","42\n"]}],"source":["print(pat3.findall(str1))\n","print(len(pat3.findall(str1)))"]},{"cell_type":"code","execution_count":196,"metadata":{"id":"33Pnr5JnlnLA"},"outputs":[],"source":["pat3 = re.compile('[a-zA-Z]+?')"]},{"cell_type":"code","execution_count":197,"metadata":{"id":"e_dBR5SvqFqs"},"outputs":[{"name":"stdout","output_type":"stream","text":["['a', 'b', 'I', 'T', 'a', 'I', 'T', 'I', 'T', 'i', 't', 'A', 'I', 'A', 'I', 'E', 'n', 'g', 'i', 'n', 'e', 'e', 'r', 'i', 'n', 'g', 'E', 'n', 'g', 'i', 'n', 'e', 'e', 'r', 'd', 'e', 'e', 'r', 'a', 'a']\n"]}],"source":["print(pat3.findall(str1))"]},{"cell_type":"code","execution_count":199,"metadata":{"id":"5tq8Oecj2EP-"},"outputs":[],"source":["happy = ''' It might seem crazy what I am 'bout to say\n","Sunshine she's here, you can take a break\n","I'm a hot air balloon that could go to space\n","With the air, like I don't care, baby by the way\n","Huh (Because I'm happy)\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Here come bad news talking this and that (Yeah)\n","Well give me all you got, don't hold back (Yeah)\n","Well I should probably warn you I'll be just fine (Yeah)\n","No offence to you don't waste your time\n","Here's why\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down\n","Can't nothing, bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Bring me down, can't nothing\n","Bring me down\n","My level's too high to bring me down\n","Can't nothing, bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Uh, bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, my level's too high\n","To bring me down (Happy, happy, happy, happy)\n","Can't nothing (Happy, happy, happy, happy)\n","Bring me down, I said\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (ayy, ayy, ayy)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Clap along if you feel like a room without a roof\n","(Because I'm happy)\n","Clap along if you feel like happiness is the truth\n","(Because I'm happy)\n","Clap along if you know what happiness is to you (hey)\n","(Because I'm happy)\n","Clap along if you feel like that's what you wanna do\n","Come on '''"]},{"cell_type":"code","execution_count":210,"metadata":{"id":"jS-fWD4cmGlb"},"outputs":[{"name":"stdout","output_type":"stream","text":["['happy', 'happy', 'happiness', 'happy', 'happiness', 'happy', 'happy', 'happiness', 'happy', 'happiness', 'happy', 'happy', 'happiness', 'happy', 'happiness', 'happy', 'happy', 'happiness', 'happy', 'happiness', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happy', 'happiness', 'happy', 'happiness', 'happy', 'happy', 'happiness', 'happy', 'happiness', 'happy']\n"]}],"source":["import re\n","\n","pat = re.compile(r'happ[a-zA-z]+')\n","\n","print(pat.findall(happy))"]},{"cell_type":"code","execution_count":211,"metadata":{"id":"baxiOCjQ2Ixu"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(197, 202), match='happy'>\n"]}],"source":["print(pat.search(happy))"]},{"cell_type":"code","execution_count":214,"metadata":{"id":"fEWQO0jVqQ0A"},"outputs":[{"name":"stdout","output_type":"stream","text":["<callable_iterator object at 0x000001F20E93AAD0>\n","[<re.Match object; span=(197, 202), match='happy'>, <re.Match object; span=(267, 272), match='happy'>, <re.Match object; span=(302, 311), match='happiness'>, <re.Match object; span=(338, 343), match='happy'>, <re.Match object; span=(373, 382), match='happiness'>, <re.Match object; span=(406, 411), match='happy'>, <re.Match object; span=(734, 739), match='happy'>, <re.Match object; span=(769, 778), match='happiness'>, <re.Match object; span=(805, 810), match='happy'>, <re.Match object; span=(840, 849), match='happiness'>, <re.Match object; span=(873, 878), match='happy'>, <re.Match object; span=(1234, 1239), match='happy'>, <re.Match object; span=(1269, 1278), match='happiness'>, <re.Match object; span=(1305, 1310), match='happy'>, <re.Match object; span=(1340, 1349), match='happiness'>, <re.Match object; span=(1373, 1378), match='happy'>, <re.Match object; span=(1496, 1501), match='happy'>, <re.Match object; span=(1531, 1540), match='happiness'>, <re.Match object; span=(1567, 1572), match='happy'>, <re.Match object; span=(1602, 1611), match='happiness'>, <re.Match object; span=(1635, 1640), match='happy'>, <re.Match object; span=(1721, 1726), match='happy'>, <re.Match object; span=(1728, 1733), match='happy'>, <re.Match object; span=(1735, 1740), match='happy'>, <re.Match object; span=(1764, 1769), match='happy'>, <re.Match object; span=(1771, 1776), match='happy'>, <re.Match object; span=(1778, 1783), match='happy'>, <re.Match object; span=(1845, 1850), match='happy'>, <re.Match object; span=(1852, 1857), match='happy'>, <re.Match object; span=(1859, 1864), match='happy'>, <re.Match object; span=(1888, 1893), match='happy'>, <re.Match object; span=(1895, 1900), match='happy'>, <re.Match object; span=(1902, 1907), match='happy'>, <re.Match object; span=(1994, 1999), match='happy'>, <re.Match object; span=(2029, 2038), match='happiness'>, <re.Match object; span=(2065, 2070), match='happy'>, <re.Match object; span=(2100, 2109), match='happiness'>, <re.Match object; span=(2149, 2154), match='happy'>, <re.Match object; span=(2272, 2277), match='happy'>, <re.Match object; span=(2307, 2316), match='happiness'>, <re.Match object; span=(2343, 2348), match='happy'>, <re.Match object; span=(2378, 2387), match='happiness'>, <re.Match object; span=(2417, 2422), match='happy'>]\n"]}],"source":["print(pat.finditer(happy))\n","\n","print(list(pat.finditer(happy)))"]},{"cell_type":"markdown","metadata":{},"source":["#### 조건문과 정규식을 사용해서 2글자 이상의 이름이 들어오면\n","허수 : 허*\n","김새로이: 김*이"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"hP-oR0WBzxCI"},"outputs":[],"source":["str0 = '허수'"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"CVEZgvFQ6qM_"},"outputs":[{"name":"stdout","output_type":"stream","text":["김*나\n"]}],"source":["import re\n","\n","input_name = input('이름을 입력해주세요 :')\n","if len(input_name) == 2:\n","  print(re.sub('([가-힣])([가-힣])', r'\\1*', input_name))\n","else:\n","  print(re.sub('([가-힣])([가-힣]+)([가-힣])', r'\\1*\\3', input_name))"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"dItyuGdtUoxQ"},"outputs":[],"source":["emails = ['python@mail.example.com', 'python+kr@example.com',              # 올바른 형식\n","          'python-dojang@example.co.kr', 'python_10@example.info',         # 올바른 형식\n","          'python.dojang@e-xample.com',                                    # 올바른 형식\n","          '@example.com', 'python@example', 'python@example-com']          # 잘못된 형식\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"X6OXCI6D62XT"},"outputs":[{"name":"stdout","output_type":"stream","text":["['python@mail.example.com', 'python-dojang@example.co.kr', 'python_10@example.info', 'python.dojang@e-xample.com']\n"]}],"source":["import re\n","\n","pattern = r'^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$'\n","\n","valid_emails = [email for email in emails if re.match(pattern, email)]\n","\n","print(valid_emails)"]},{"cell_type":"markdown","metadata":{},"source":["선택된 코드는 정규 표현식(Regular Expression)을 나타냅니다. 정규 표현식은 문자열에서 특정 패턴을 찾기 위해 사용되는 강력한 도구입니다. 이 특정 정규 표현식은 이메일 주소의 유효성을 검사하는 데 사용됩니다.\n","\n","- `r`은 Python에서 정규 표현식 문자열 앞에 붙여, 백슬래시([`\\`](command:_github.copilot.openRelativePath?%5B%7B%22scheme%22%3A%22file%22%2C%22authority%22%3A%22%22%2C%22path%22%3A%22%2Fc%3A%2FITStudy%2F%22%2C%22query%22%3A%22%22%2C%22fragment%22%3A%22%22%7D%5D \"c:\\ITStudy\\\"))가 이스케이프 문자로 처리되지 않고 문자 그대로 해석되게 하는 raw string 표시입니다.\n","\n","- `^`는 문자열의 시작을 나타냅니다.\n","\n","- `[\\w\\.-]+`는 문자, 숫자, 밑줄(`_`), 마침표([`.`](command:_github.copilot.openRelativePath?%5B%7B%22scheme%22%3A%22file%22%2C%22authority%22%3A%22%22%2C%22path%22%3A%22%2Fc%3A%2FITStudy%22%2C%22query%22%3A%22%22%2C%22fragment%22%3A%22%22%7D%5D \"c:\\ITStudy\")), 또는 하이픈(`-`) 중 하나 이상의 연속된 문자열을 의미합니다. 이 부분은 이메일 주소에서 사용자 이름을 나타냅니다.\n","\n","- `@`는 리터럴 문자 `@`를 나타내며, 이메일 주소에서 사용자 이름과 도메인을 구분하는 데 사용됩니다.\n","\n","- `[\\w\\.-]+`는 도메인 이름을 나타내며, 이전과 같이 문자, 숫자, 밑줄, 마침표, 또는 하이픈의 연속을 의미합니다.\n","\n","- [`\\.`](command:_github.copilot.openRelativePath?%5B%7B%22scheme%22%3A%22file%22%2C%22authority%22%3A%22%22%2C%22path%22%3A%22%2Fc%3A%2FITStudy%22%2C%22query%22%3A%22%22%2C%22fragment%22%3A%22%22%7D%5D \"c:\\ITStudy\")는 리터럴 마침표를 나타냅니다. 이메일 주소에서 도메인 이름과 최상위 도메인(TLD)을 구분하는 데 사용됩니다.\n","\n","- `\\w+`는 문자, 숫자, 또는 밑줄 중 하나 이상을 의미합니다. 이 부분은 이메일 주소의 최상위 도메인을 나타냅니다.\n","\n","- `$`는 문자열의 끝을 나타냅니다.\n","\n","이 정규 표현식은 전체적으로 이메일 주소가 일반적으로 받아들여지는 형식에 맞는지 검사합니다. 예를 들어, `user@example.com`은 이 패턴과 일치하지만, `user@example` 또는 `@example.com`은 일치하지 않습니다. 이 정규 표현식을 사용하여 입력된 이메일 주소의 형식이 올바른지 프로그래밍적으로 검증할 수 있습니다."]},{"cell_type":"markdown","metadata":{"id":"uKIYLLTfjcR6"},"source":["### 그루핑 패턴\n","- 자주 사용하는 패턴은 별명을 지어 부를 수도 있습니다."]},{"cell_type":"code","execution_count":10,"metadata":{"id":"Jg8LEEEKjWPX"},"outputs":[{"name":"stdout","output_type":"stream","text":["re.compile('(?P<name>(\\\\w+))\\\\s+(?P<phone>(\\\\d{3}-\\\\d{4}-\\\\d{4}))')\n"]}],"source":["# pattern grouping\n","import re\n","\n","string = '김가나 010-0987-8765'\n","\n","re.sub('(\\w+)\\s+(\\d{3}-\\d{4}-\\d{4})', r'\\2/\\1', string)\n","p = re.compile(r'(?P<name>(\\w+))\\s+(?P<phone>(\\d{3}-\\d{4}-\\d{4}))')\n","\n","print(p)"]},{"cell_type":"markdown","metadata":{"id":"QMJ2qY-NVPC4"},"source":["# 출력 문자열 꾸미기\n","- print(1, a)\n","\n","- 파이썬에서는 출력하고 싶은 문자열을 다양한 방법으로 꾸밀 수 있습니다.\n","\n","    1. f-string\n","    2. format\n","    3. %\n","\n","- 주로 아래의 방식으로 표기를 합니다.\n","    (d - decimal(정수) / f - float(실수) / s - string(문자열))\n","\n","|데이터 예시| 출력 형식(formatting)\t|출력 결과|\t설명|\n","|-----------|-----------|---------|-----|\n","|10|3d|↔︎10|정수를 공백 포함해 세 자리로 표시 (↔︎은 공백 한 칸을 의미함)|\n","|10|05d|00010|정수를 다섯 자리로 표시. 앞의 공백은 0으로 채움|\n","|0.12345|.3f|0.123|실수를 소수점 셋째 자리까지 표시|\n","|1234000|,|1,234,000|통화 표시처럼 끝에서 셋째 자리마다 ','를 표시|\n","|0.1234|.1%|12.3%|숫자를 퍼센트(%)로 표시. 퍼센트 표시에서 소수점 자리 수는 '.' 다음 숫자로 표시|\n","|12300000000|.2e|1.23e+10|숫자를 지수로 표시. 지수 표시에서 소수점 자리 수는 '.' 다음 숫자로 표시|\n"]},{"cell_type":"markdown","metadata":{"id":"PD12ehDAVo46"},"source":["- 개발자는 게으르니까 1+2 정도만 치면 3은 알아서 출력되게 하고 싶지 않았을까요?\n","- 그런데 문자열 안에서는 연산을 할 수가 없습니다."]},{"cell_type":"markdown","metadata":{"id":"Ca2CcuTuV1VS"},"source":["## fstring\n","- 문자열 앞에 f를 붙여주면 됩니다\n","- 파이썬 3.6부터 사용 가능\n","- 가장 최신 문법, 가장 간결하고 직관적인 표현법"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"Zv9VsTLLVzW5"},"outputs":[{"name":"stdout","output_type":"stream","text":["The sum of 1.440 and 2.000 is 3.44\n"]}],"source":["a = 1.44\n","b = 2\n","\n","print(f'The sum of {a:.3f} and {b:.3f} is {a+b}')"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"_vKIFtBiWO-F"},"outputs":[{"name":"stdout","output_type":"stream","text":["The sum of 1.44 and 002 is 3.44\n"]}],"source":["a = 1.44\n","b = 2\n","\n","print(f'The sum of {a:.2f} and {b:03d} is {a+b}')"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"gEu9UZT4WKKy"},"outputs":[{"name":"stdout","output_type":"stream","text":["The sum of 거너더러머버서 and 2.234e+09 is 거너더러머버서\n"]}],"source":["a = '거너더러머버서'\n","b = 2234234234\n","\n","print(f'The sum of {a} and {b:.3e} is {a}')"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":437,"status":"ok","timestamp":1666079328622,"user":{"displayName":"YeonJi Kim","userId":"14148434577200812637"},"user_tz":-540},"id":"E-gk0n5GW_U7","outputId":"0888b099-1ca6-44a0-b935-0a6f4580f116"},"outputs":[{"name":"stdout","output_type":"stream","text":["파이: 3.14\n","파이: 3.14\n","반지름이 r인 원의 넓이: 28.274\n","반지름이 r인 원의 넓이: 28\n","반지름이 r인 원의 넓이: 28.274328\n","36만원: 360,000\n"]}],"source":["PI = 3.141592\n","r = 3\n","\n","print(f'파이: {round(PI, 2)}') # {표현내용}에 변수를 입력\n","print(f'파이: {PI:.2f}') # {표현내용}에 변수를 입력\n","print(f'반지름이 r인 원의 넓이: {r*r*PI:.3f}') # 반지름이 r인 원의 넓이를 소수점 셋째자리까지 출력해주시고\n","print(f'반지름이 r인 원의 넓이: {r*r*PI:.0f}') # float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)\n","print(f'반지름이 r인 원의 넓이: {r**2*PI}') # r**2 : r의 거듭제곱\n","print(F'36만원: {360000:,}')# 360000원을 세자리수마다 ,로 끊어서 출력해주세요\n"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"CRes6DeDXFBS"},"outputs":[{"name":"stdout","output_type":"stream","text":["12.3%\n"]}],"source":["print(f'{0.12344432:.1%}')"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"WFasPT1pfSYp"},"outputs":[{"name":"stdout","output_type":"stream","text":["12%\n"]}],"source":["print(f'{0.12344432:.0%}')"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"_kKUARnWIhc4"},"outputs":[{"name":"stdout","output_type":"stream","text":["                                                                                                 432\n"]}],"source":["print(f'{432:>100d}')"]},{"cell_type":"code","execution_count":35,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["432                                                                                                 \n"]}],"source":["print(f'{432:<100d}')"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"3vd_jfbOI2xA"},"outputs":[{"name":"stdout","output_type":"stream","text":["                                                432                                                 \n"]}],"source":["print(f'{432:^100d}')"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"8RAudCShJOBL"},"outputs":[{"name":"stdout","output_type":"stream","text":["⚽⚽⚽432⚽⚽⚽⚽\n"]}],"source":["print(f'{432:⚽^10d}')"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"sr7vHC7bJV7L"},"outputs":[{"name":"stdout","output_type":"stream","text":["432⚽⚽⚽⚽⚽⚽⚽\n","⚽⚽⚽⚽⚽⚽⚽432\n"]}],"source":["print(f'{432:⚽<10d}')\n","print(f'{432:⚽>10d}')"]},{"cell_type":"markdown","metadata":{"id":"Pk59M0sMXSJa"},"source":["# format\n","- 문자열을 추가하거나 형식화하는데 사용하는 메소드입니다.\n","- 파이썬3.1부터는 변수명/인덱스명을 생략 가능합니다\n","\n","```\n","str.format(*args, **kwargs)\n","```"]},{"cell_type":"code","execution_count":39,"metadata":{"id":"_eypHWZiJ1BO"},"outputs":[],"source":["a = 'hahahahahahahahahahahahahah'\n","b = 3"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"qKN0FiYmXMBT"},"outputs":[{"data":{"text/plain":["'hahahahahahahahahahahahahah the blah blah something great is 3'"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["'{} the blah blah something great is {}'.format(a, b)"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"QJbUrvczKLMe"},"outputs":[{"name":"stdout","output_type":"stream","text":["파이: 3.14\n","파이: 3.14\n","반지름이 r인 원의 넓이: 28.274\n","반지름이 r인 원의 넓이: 28\n","반지름이 r인 원의 넓이: 28.274328\n","36만원: 360,000\n"]}],"source":["PI = 3.141592\n","r = 3\n","\n","print('파이: {}'.format(round(PI, 2))) # {표현내용}에 변수를 입력\n","print('파이: {:.2f}'.format(PI)) # {표현내용}에 변수를 입력\n","print('반지름이 r인 원의 넓이: {:.3f}'.format(r*r*PI)) # 반지름이 r인 원의 넓이를 소수점 셋째자리까지 출력해주시고\n","print('반지름이 r인 원의 넓이: {:.0f}'.format(r*r*PI)) # float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)\n","print('반지름이 r인 원의 넓이: {}'.format(r**2*PI)) # r**2 : r의 거듭제곱\n","print('36만원: {:,}'.format(360000))# 360000원을 세자리수마다 ,로 끊어서 출력해주세요\n"]},{"cell_type":"code","execution_count":49,"metadata":{"id":"XdUd-8oIXx8r"},"outputs":[{"name":"stdout","output_type":"stream","text":["1: 10, 2: 40, 3: 10\n"]}],"source":["a = 10\n","b = 20\n","c = 30\n","d = 40\n","\n","print('1: {one}, 2: {two}, 3: {three}'.format(one=a, two=d, three=a))"]},{"cell_type":"markdown","metadata":{"id":"yWxbY9nahh_C"},"source":["# % 뒤 문자열 데이터를 출력하는 방법\n","\n","- %d - 정수 표현 - int / decimal (십진법)\n","- %s - 문자 표현 - str\n","- %f - 소수를 표현 - float\n","- 호환은 되지만 데이터 손실이 있다"]},{"cell_type":"code","execution_count":56,"metadata":{"id":"W-e1VQys9lUR"},"outputs":[{"name":"stdout","output_type":"stream","text":["파이: 3.141592\n","파이: 3.14\n","반지름이 r인 원의 넓이: 28.274\n","반지름이 r인 원의 넓이: 28}\n","반지름이 r인 원의 넓이: 28.274328\n"]},{"ename":"ValueError","evalue":"unsupported format character ',' (0x2c) at index 7","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)","Cell \u001b[1;32mIn[56], line 9\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m반지름이 r인 원의 넓이: \u001b[39m\u001b[38;5;132;01m%.0f\u001b[39;00m\u001b[38;5;124m}\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;241m%\u001b[39m(r\u001b[38;5;241m*\u001b[39mr\u001b[38;5;241m*\u001b[39mPI)) \u001b[38;5;66;03m# float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)\u001b[39;00m\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m반지름이 r인 원의 넓이: \u001b[39m\u001b[38;5;132;01m%f\u001b[39;00m\u001b[38;5;124m'\u001b[39m \u001b[38;5;241m%\u001b[39m(r\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m2\u001b[39m\u001b[38;5;241m*\u001b[39mPI)) \u001b[38;5;66;03m# r**2 : r의 거듭제곱\u001b[39;00m\n\u001b[1;32m----> 9\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m36만원: \u001b[39;49m\u001b[38;5;124;43m%\u001b[39;49m\u001b[38;5;124;43m,\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m%\u001b[39;49m\u001b[38;5;241;43m360000\u001b[39;49m)\u001b[38;5;66;03m# 360000원을 세자리수마다 ,로 끊어서 출력해주세요\u001b[39;00m\n","\u001b[1;31mValueError\u001b[0m: unsupported format character ',' (0x2c) at index 7"]}],"source":["PI = 3.141592\n","r = 3\n","\n","print('파이: %f' %PI) # {표현내용}에 변수를 입력\n","print('파이: %.2f' %PI) # {표현내용}에 변수를 입력\n","print('반지름이 r인 원의 넓이: %.3f' %(r*r*PI)) # 반지름이 r인 원의 넓이를 소수점 셋째자리까지 출력해주시고\n","print('반지름이 r인 원의 넓이: %.0f}' %(r*r*PI)) # float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)\n","print('반지름이 r인 원의 넓이: %f' %(r**2*PI)) # r**2 : r의 거듭제곱\n","print('36만원: %,' %360000)# 360000원을 세자리수마다 ,로 끊어서 출력해주세요\n"]},{"cell_type":"markdown","metadata":{"id":"BSGpwKsemcRR"},"source":["- 참고 : https://pyformat.info/"]},{"cell_type":"markdown","metadata":{"id":"2bksGf10lx-0"},"source":["# upper, lower, capitalize"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dIMsWOcdlnF6"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HPMjW4XNl3xM"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_ZoQxrMsl486"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W_uv3fj6l51q"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OukcTwPkl_5S"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xToA0tPEOQaQ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F7msYbjbUFjI"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"DA3tudF955_h"},"source":["# 표준 출력\n","- print() 는 파이썬의 표준 출력 함수입니다.\n","    - 표준 출력 장비(모니터)로 출력을 보내주는 함수를 의미합니다.\n","\n","```\n"," print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n","```\n","\n","텍스트 데이터인 경우\n","- # w : 쓰기 모드, r: 읽기 모드, a: 추가 모드\n","\n","바이너리 데이터인 경우\n","-  # wb : 쓰기 모드, rb: 읽기 모드, ab: 추가 모드\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Da5P07w96Q2m"},"outputs":[],"source":["# 파일을 읽고 쓰는 방법 2가지\n","# 방법1.\n","# with open(파일명, 모드) as 파일을 가리키는 약어:\n","#    print(뭘 쓰려는지, file=약어)\n","# - with문이 끝나면 자동으로 파일이 닫힘"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sWWs5_0-H6Nn"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xWD6v4-y6Vok"},"outputs":[],"source":["# 파일을 읽고 쓰는 방법"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-XXelm3L6nqS"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ry1dtr6g63j8"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JLKZAgRD7NQK"},"outputs":[],"source":["# 'text11.txt'에 5줄을 써 주세요."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u3bvzpVE7ZyC"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"gjFdlZYE9gMa"},"source":["## 실습\n","```\n","짱구     개나리반      5세\n","짱아     장미반        2세\n","훈이     개나리반      5세\n","```\n","위 내용이 들어있는 jjanggu.csv 파일을 만들어주세요.\n","구분자(sep)는 콤마, end=\\t (4칸씩)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yNLGXuZWEoAH"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"igW_SUs2_C6k"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"CbO8mJo7GFRc"},"source":["- 파일을 읽어오는 방법 ('r'모드)\n","\n","    - 기본"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Rtko3ujRnAA"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4gdo4GL6Tael"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"guYk6RKIF5r0"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"XoSZdSP2G8dc"},"source":["- readline() 사용하면 줄별로 출력을 해줍니다."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l2Q79Xz0QOM0"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i-JaUOfgG2XN"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HmeHfk2TPbU3"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"fBNJpoUvVEMP"},"source":["- while - 언제 끝날지 모를 때 주로 사용\n","- for - 특정 횟수를 반복해야 함을 알 때 주로 사용"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"94Z8BIJfgpUa"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GEbj55ufgmot"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eZg908MAPoRB"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_uk0kDGFHSOk"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"R7EH2bGzKHzf"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"17S0KILzIBqE"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ih6pw65wIIBr"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mnVnp6T1HWPE"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vlSVe2sDKCT7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cB-dYFebWvaK"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fAUmXmGHWroA"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"gKvmaB5RP2E1"},"source":["- readlines() -  파일의 모든 줄을 읽어서 각각의 줄을 요소로 갖는 **리스트**로 돌려줌"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"61ZVSxsTMUh7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WgyoK1TJXhDn"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UuO9M-CmXvj6"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"XMQtsrbDRZhj"},"source":["실습1. 아래의 내용을 test.txt에 입력합니다. (공백 포함)\n","```\n","안녕하세요,\n","             만나서 반갑습니다.\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uhRSwu2GepFw"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kpIPUBWOS7xz"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OqpGakv7YB-b"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UITbBDEjaef5"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QnaayGW6bZwt"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f7XpcEf5T_cL"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TbNiXqqpUVHR"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"SGHV7z0da2EE"},"source":["# flush"]},{"cell_type":"markdown","metadata":{"id":"GU30W-4va1-C"},"source":["- 스트림 객체로 바꿔서 출력을 해주고 있다 라는 뜻입니다.\n","- 객체를 그때그때 잘라서 보낸다"]},{"cell_type":"markdown","metadata":{"id":"h1-M6mHNf8jN"},"source":["- 인터프리터 문제 : 한줄씩 읽으면서 블록단위로 실행하고 있어서\n","- 코랩(주피터) 확인할 수 없다"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":344,"status":"ok","timestamp":1661849172419,"user":{"displayName":"YeonJi Kim","userId":"14148434577200812637"},"user_tz":-540},"id":"trvb2_Ya7exJ","outputId":"3765efb0-a4c5-4588-c095-9a8f94c7c107"},"outputs":[{"name":"stdout","output_type":"stream","text":["Writing flush_true.py\n"]}],"source":["%%writefile flush_true.py\n","import time\n","\n","start_time = time.time()\n","\n","for i in range(15):\n","    print(i, end=' ', flush=True)\n","    time.sleep(1)\n","\n","end_time = time.time()\n","elapsed_time = end_time - start_time\n","print(elapsed_time)\n","\n","time.sleep(3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":420,"status":"ok","timestamp":1661849204037,"user":{"displayName":"YeonJi Kim","userId":"14148434577200812637"},"user_tz":-540},"id":"6K2SexDq7kWx","outputId":"a53a2ea1-2a44-4938-e891-5ee28e60b724"},"outputs":[{"name":"stdout","output_type":"stream","text":["Writing flush_false.py\n"]}],"source":["%%writefile flush_false.py\n","# 실행해보면 마지막에 쏟아집니다\n","import time\n","start_time = time.time()\n","for i in range(15):\n","    print(i,  end=' ', flush=False)\n","    time.sleep(1)\n","end_time = time.time()\n","elapsed_time = end_time - start_time\n","print(elapsed_time)\n","\n","time.sleep(3)"]},{"cell_type":"markdown","metadata":{"id":"0fRpflc6UVQc"},"source":["- 파일을 읽어오는 방법 ('r'모드)\n","\n","    - 기본"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qu6vUqzVUVQc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rBBkr8wyUVQc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MTsCDTwcUVQc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"wD8c_lM0UVQc"},"source":["- readline() 사용하면 줄별로 출력을 해줍니다."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kLgJbXUtUVQc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PlOfmCTFUVQc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6zHSoaz1UVQc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"33cVc1C4UVQc"},"source":["- while - 언제 끝날지 모를 때 주로 사용\n","- for - 특정 횟수를 반복해야 함을 알 때 주로 사용"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8wOODJSiUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k-yUgZ7RUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q00iwveBUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6VBr5oRIUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tB0HkerRUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TFLcCTs4UVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Cbbj3lxvUVQd"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"nCvmbPYPUVQd"},"source":["- readlines() -  파일의 모든 줄을 읽어서 각각의 줄을 요소로 갖는 **리스트**로 돌려줌"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ov_KEEVnUVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ESuE-U-4UVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sPY0o01HUVQd"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"LxZ9f8pWJJn2"},"source":["실습1. 아래의 내용을 test.txt에 입력합니다. (공백 포함)\n","```\n","안녕하세요,\n","             만나서 반갑습니다.\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yQ4rOuN0UVQd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Tx9x7Nh4UVQe"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kEmX0JZ1b367"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lGAH8fXcag3d"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AqTr1aAdcv4T"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DtswqlfGb-aF"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GZ04jBzCFCne"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EGnKS2TLwxM7"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"lWZjF41jR9k9"},"source":["실습3. readlines()를 활용하여 아래와 같이 출력합니다."]},{"cell_type":"markdown","metadata":{"id":"LLDS9V1_SWqj"},"source":["```\n","안녕하세요.\n","만나서 반갑습니다.\n","저는 겨울을 좋아합니다.\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ht368J1vW96q"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kwCaD8LNYv0M"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d-BOFTG_YIpi"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LcublRLtX0kc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mf0JF8FeZtTE"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bRBSGRGpZQ08"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"99xFcfBsaClU"},"source":["- 혼자 쓰지 않는 한 파일을 열어서 입출력하고 나면 close() 메소드로 닫아주세요."]}],"metadata":{"colab":{"provenance":[{"file_id":"1KLfdxvmWY4egvqQuZakFcOW9dCs4wqZP","timestamp":1720600132856},{"file_id":"1qDfdFUZnPaed3MQLFY17bwvsCdWH-6nJ","timestamp":1682640063870},{"file_id":"1BR7dmdfJwJgkfs4iT91EYxmMJNRyEo79","timestamp":1665996337212},{"file_id":"1ZzZ_ACEgM_2D9NyRyahZrPC3qyCuuEOf","timestamp":1661730723711},{"file_id":"1aycY6fZlCfGJHKFR7ZWBWsgfL-T0b7-M","timestamp":1661695115016},{"file_id":"1xdZql0Q-L1O83c1i38DeJdEcWzpzx81V","timestamp":1661678717097},{"file_id":"1RA3auQbWknrECvB_JtSkqskfQwNtFwsy","timestamp":1657185765966},{"file_id":"1hDR61YKzl8w_jmTsMgQ5-0BfOanQOiTN","timestamp":1657185334291}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.9"}},"nbformat":4,"nbformat_minor":0}
